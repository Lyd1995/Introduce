

一、目的
托管开源代码

二、基本概念
仓库（repository）：一个项目对应一个仓库

收藏（star）：收藏别人的开源项目，方便查看

复制克隆项目（fork）：自动生成一个仓库，和被复制的一样，会有标明来自哪里，独立存在，即被复制的没了，也会存在

发起请求（pull request）：可以在复制的仓库下添加代码，添加后，可以发起请求，等待被复制方同意，同意后会被合并到原仓库

关注（watch）：关注项目，当项目更新，会通知你

事务卡片（issue）：发现代码有BUG，但是目前没有成型代码，需要讨论

Github主页：注册成功后，进入的就是主页
左侧：显示用户动态，自己和他人    右侧：显示自己的Git仓库

仓库主页：显示项目的信息，入：项目代码，版本，收藏/关注/fork

个人主页：头像，关注的人

（一）仓库管理（一个仓库相当于一个项目）
用户名/仓库名

创建新文件（create new file）：加后缀
preview：可以预览
edit new file：编辑文件
commit new file：填写提交的目的，方便其他开发者知道本次提交的原因，下面是详细说明
commit：提交次数（编辑一次也算提交，删除也算一次），点击commit可以去查看每次修改的详细信息

点击描述，可以查看文件的详细信息

find file:查找文件

Clone or download:下载/检出项目

（二）GitHub issues
作用：发现代码BUG，但是目前没有成型代码，需要讨论时使用，或者是开源项目出现问题时使用

怎么去看别人的代码？
首先复制它的主页地址，比如我的是
https://github.com/Lyd1995
访问这个地址，你将看到：右上角有个登录（sign in），登录自己的账号，这就相当于你在访问他人的GitHub库了

点击issues，左边有个new issues，可以创建issues

关闭issues的功能，两者都有

（三）交流
收藏（star）
访问他人仓库时，觉得不错，右上角有收藏

查看时，点击your star

关注（watch）
关注某个项目的动态

复制（fork）
复制别人的项目到自己的仓库，可以对这个项目进行修改，并且是单独存在的

发起请求（pull request）

（四）贡献

1、issues

2、pull request
步骤：
（1）、fork
（2）、修改代码
（3）、新建pull request
（4）、等待作者审核


三、安装Git
地址：https://www.git-scm.com/download/win

git里面有三个区域：
（1）git仓库区
（2）暂存区
（3）工作区（用于修改、编辑文件）

提交流程：（命令行模式）
（1）git status              //得到文件的状态
（2）git add 文件名          //将文件放入暂存区
（3）git commit -m 文件名    //从暂存区放入git仓库

（一）、git初始化及仓库创建

1、设置用户名与电子邮箱：
git config --global user.name 'Lyd1995'
git config --global user.name '842354018@qq.com'

该设置在GitHub显示谁提交了提交

2、初始化命令：
git init
生成了一个隐藏文件，存储本地仓库信息


3、向仓库添加文件
touch test.py
